/**

 * Definition for singly-linked list.

 * class Node {

 * public:

 *     int data;

 *     Node *next;

 *     Node() : data(0), next(nullptr) {}

 *     Node(int x) : data(x), next(nullptr) {}

 *     Node(int x, Node *next) : data(x), next(next) {}

 * };

 */

int len(Node*head)

{

    if(head==NULL)

    {

        return 0;

    }

    return 1+len(head->next);

}

Node* kReverse(Node* head, int k) {

Node*cur=head;

Node*prev=NULL;

Node*temp=NULL;

if(k==0 || k==1 || head==NULL)

{

    return  head;

}

 

int c=0;

int l=len(head);

if(l<k)

{

    return head;

}

while(cur!=NULL &&c<k)

{

temp=cur->next;

cur->next=prev;

prev=cur;

cur=temp;

c++;

}

if (temp != NULL ) {

head->next = kReverse(temp, k);

}

 

return  prev;

}
